id,sentence
4,We describe a new technique for constructing finite- state transducers that involves reapplying the regular-expression compiler to its own output.
5,"Implemented in an algorithm called compile- replace, this technique has proved useful for handling non-concatenative phenomena; and we demonstrate it on malay full-stem reduplication and arabic stem interdigitation."
7,"Such “concatenative morphotactics” can be impressively productive, especially in agglutinative languages like aymara (figure 11) or turkish, and in agglutinative/polysynthetic languages like inuktitut (figure 2)(mallon, 1999, 2)."
9,"Finite-state morphology in the tradition of the two-level (koskenniemi, 1983) and xerox implementations (karttunen, 1991; karttunen, 1994; beesley and karttunen, 2000) has been very successful in implementing large-scale, robust and efficient morphological analyzergenerators for concatenative languages, includ ing the commercially important european languages and non-indo-european examples like 1 i wish to thank stuart newton for this example."
11,"However, koskenniemi himself understood that his initial implementation had significant limitations in handling non-concatenative morphotactic processes: “only restricted infixation and reduplication can be handled adequately with the present system."
15,We shall argue that the morphotactic limitations of the traditional implementations are the direct result of relying solely on the concatenation operation in morphotactic description.
16,"We describe a technique, within the xerox implementation of finite-state morphology, that corrects the limitations at the source, going beyond concatenation to allow the full range of finite-state operations to be used in morphotac- tic description."
18,"This technique, implemented in an algorithm called compile-replace, has already proved useful for handling malay full- stem reduplication and arabic stem interdigitation, which will be described below."
22,"In the most theory- and implementation-neutral form, morphological analysis and generation of written words can be modeled as a relation between the words themselves and analyses of those words."
30,"It is sometimes convenient to design these lexical strings to show all the constituent morphemes in their morphophonemic form, separated and identified as in figures 1 and 2."
58,"Lexical transducers are more efficient for analysis and generation than the classical two- level systems (koskenniemi, 1983) because the morphotactics and the morphological alternations have been precompiled and need not be consulted at runtime."
70,We will proceed with descriptions of how malay reduplication and semitic stem interdigitation are handled in finite-state morphology using the new compile-replace algorithm.
71,"The central idea in our approach to the modeling of non-concatenative processes is to define networks using regular expressions, as before; but we now define the strings of an intermediate network so that they contain appropriate substrings that are themselves in the format of regular expressions."
84,"Figure 8: a network with a regular-expression substring on the lower side the application of the compile-replace algorithm to the lower side of the network eliminates the markers, compiles the regular expression a* and maps the upper side of the path to the language resulting from the compilation."
86,"When applied in the “upward” direction, the transducer in figure 9 maps any string of the infinite a* language into the regular expression from which the language was compiled."
94,"Traditional two-level implementations are already capable of describing some limited reduplication and infixation as in tagalog (antworth, 1990, 156–162)."
96,"An example of variable-length full-stem reduplication occurs with the malay stem bagi, which means “bag” or “suitcase”; this form is in fact number-neutral and can translate as the plural."
98,"Although this pluralization process may appear concatenative, it does not involve concatenating a predictable pluralizing morpheme, but rather copying the preceding stem, whatever it may be and however long it may be."
99,"Thus the overt plural of pelabuhan (“port”), itself a derived form, is phonologically pelabuhanpelabuhan."
103,"On the assumption that there are only a finite number of words subject to reduplication (no free compounding), it is possible to construct a lexical transducer for languages 3 in the standard orthography, such reduplicated words are written with a hyphen, e.g"
107,To understand the general solution to full- stem reduplication using the compile-replace algorithm requires a bit of background.
120,"We believe that our approach to reduplication can account for these complex phenomena as well but we cannot discuss the lexical: b a g i +noun +plural surface: b a g i b a g i lexical: p e l a b u h a n +noun +plural surface: p e l a b u h a n p e l a b u h a n figure 12: the malay fst after the application of compile-replace to the lower-side language the special delimiters ^[ and ^] can be used to surround any appropriate regular- expression substring, using any necessary regular-expression operators, and compile- replace may be applied to the lower-side and/or upper-side of the network as desired."
126,"According to an influential autosegmental analysis (mccarthy, 1981), this stem consists of an all-consonant root ktb whose general meaning has to do with writing, an abstract consonant-vowel template cvcvc, and a voweling or vocalization that he symbolized simply as a, signifying perfect aspect and active voice."
131,"Tiers of mccarthy (1981) as projections of a multi-level transducer and wrote a small prolog- based prototype that handled the interdigitation of roots, cv-templates and vocalizations into abstract arabic stems; this general approach, with multi-tape transducers, has been explored and extended by kiraz in several papers (1994a; 1996; 1994b; 2000) with respect to syriac and arabic."
134,"Thus akkadian words were formalized as consisting of morphemes, some of which were combined together by intersection and others of which were combined via concatenation."
136,"By extension, the widely noticed limitations of early finite-state implementations in dealing with non-concatenative morphotactics could be traced to their dependence on the concatenation operation in morphotactic descriptions."
143,"Following the lines of kataja and koskenniemi (1988), we could define intermediate networks with regular-expression substrings that indicate the intersection of suitably encoded roots, templates, and vocalizations (for a formal description of what such regular-expression substrings would look like, see beesley (1998c; 1998b))."
148,The objective of the merge operation is to align the template strings with the filler strings and to instantiate the class symbols of the template as the matching filler symbols.
205,"The application of the compile-replace operation to the lower side of the initial lexicon yields a transducer that maps the arabic interdigitated forms directly into their corresponding tripartite analyses and vice versa, as illustrated in figure 17."
206,"Alternation rules are subsequently composed on the lower side of the result to map the in- terdigitated, but still morphophonemic, strings into real surface strings."
218,"The small prototype dictionary, stored in an xml format, contains approximately 1000 roots, with about 1500 derivational subentries (i.e"
225,"The well-founded criticism of traditional implementations of finite-state morphology, that they are limited to handling concatenative morpho- tactics, is a direct result of their dependence on the concatenation operation in morphotactic description."
226,"The technique described here, implemented in the compile-replace algorithm, allows the regular-expression compiler to reapply to and modify its own output, effectively freeing morphotactic description to use any finite-state operation."
